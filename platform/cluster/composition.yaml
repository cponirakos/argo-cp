apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xclusters.platformref.crossplane.io
  annotations:
    argocd.argoproj.io/sync-wave: "3"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  compositeTypeRef:
    apiVersion: platformref.crossplane.io/v1alpha1
    kind: XCluster
  mode: Pipeline
  pipeline:
    - step: pnt-composite-resources
      functionRef:
        name: function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        resources:
        - name: compositeNetwork
          base:
            apiVersion: platformref.crossplane.io/v1alpha1
            kind: XNetwork
            spec:
              providerConfig:
                aws: default #<<<< Change this to match the name of your aws provider config
          patches:
            - fromFieldPath: spec.id
              toFieldPath: spec.id
            - fromFieldPath: spec.cloud
              toFieldPath: compositionSelector.matchLabels.cloud
            - type: ToCompositeFieldPath
              fromFieldPath: status.subnetIds
              toFieldPath: status.subnetIds
              policy:
                fromFieldPath: Required
            - type: ToCompositeFieldPath
              fromFieldPath: status.securityGroupIds
              toFieldPath: status.securityGroupIds
              policy:
                fromFieldPath: Required
            - fromFieldPath: spec.providerConfig.aws
              toFieldPath: spec.providerConfig.aws
        - name: compositeK8s
          base:
            apiVersion: platformref.crossplane.io/v1alpha1
            kind: XK8s
            spec:
              providerConfig:
                aws: default #<<<< Change this to match the name of your aws provider config
          patches:
            - fromFieldPath: spec.id
              toFieldPath: spec.id
            - fromFieldPath: spec.cloud
              toFieldPath: compositionSelector.matchLabels.cloud
            - fromFieldPath: spec.claimRef.namespace
              toFieldPath: spec.claim.namespace
            - fromFieldPath: spec.parameters.nodes.count
              toFieldPath: spec.parameters.nodes.count
            - fromFieldPath: spec.parameters.nodes.size
              toFieldPath: spec.parameters.nodes.size
            - fromFieldPath: spec.providerConfig.aws
              toFieldPath: spec.providerConfig.aws
            - fromFieldPath: status.subnetIds
              toFieldPath: spec.subnetIds
              policy:
                fromFieldPath: Required
            - fromFieldPath: status.securityGroupIds
              toFieldPath: spec.securityGroupIds
              policy:
                fromFieldPath: Required
        - name: compositeServices
          base:
            apiVersion: platformref.crossplane.io/v1alpha1
            kind: XServices
          patches:
            - fromFieldPath: metadata.labels
              toFieldPath: metadata.labels
            - fromFieldPath: spec.id
              toFieldPath: metadata.name
            - fromFieldPath: spec.id
              toFieldPath: spec.providerConfigRef.name
            - fromFieldPath: spec.parameters.services.operators.prometheus.version
              toFieldPath: spec.operators.prometheus.version
    - step: automatically-detect-ready-composed-resources
      functionRef:
        name: function-auto-ready